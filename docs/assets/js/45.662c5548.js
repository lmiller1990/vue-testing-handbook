(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{260:function(t,e,v){"use strict";v.r(e);var a=v(0),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"тестирование-vuex"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#тестирование-vuex"}},[t._v("#")]),t._v(" Тестирование Vuex")]),t._v(" "),v("p",[t._v("В следующих статьях обсудим как тестировать Vuex.")]),t._v(" "),v("h2",{attrs:{id:"две-стороны-тестирования-vuex"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#две-стороны-тестирования-vuex"}},[t._v("#")]),t._v(" Две стороны тестирования Vuex")]),t._v(" "),v("p",[t._v("Обычно компоненты взаимодействуют с Vuex так:")]),t._v(" "),v("ol",[v("li",[t._v("вызываем мутацию через commit")]),t._v(" "),v("li",[t._v("запускаем действия через dispatch")]),t._v(" "),v("li",[t._v("обращаемся к хранилищу через "),v("code",[t._v("$store.state")]),t._v(" или геттеры")])]),t._v(" "),v("p",[t._v("В тестах проверяется, что компонент ведет себя правильно при текущем состоянии хранилища Vuex. Они не должны знать о реализациях мутаций, действий, геттеров.")]),t._v(" "),v("p",[t._v("Любая логика хранилища, такая как мутация или использование геттеров, должна тестироваться в изоляции. Для Vuex достаточно просто писать юнит тесты, так как он хранит в себе простые JavaScript функции.")]),t._v(" "),v("p",[t._v("В следующей статье разберем некоторые техники тестирования компонентов с использованием Vuex, убедимся, что их поведение зависит от состояния хранилища. Чуть позже обсудим тестирование Vuex в изоляции.")])])}),[],!1,null,null,null);e.default=s.exports}}]);